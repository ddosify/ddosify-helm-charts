apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ddosify
  labels:
    service: hammer
  name: hammer
spec:
  replicas: {{ .Values.hammerReplicas }}
  selector:
    matchLabels:
      service: hammer
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/selfhosted-ddosify: "true"
        service: hammer
    spec:
      containers:
        - env:
            - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
                  name: env
            - name: DOCKER_INFLUXDB_INIT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_PASSWORD
                  name: env
            - name: DOCKER_INFLUXDB_INIT_USERNAME
              valueFrom:
                configMapKeyRef:
                  key: DOCKER_INFLUXDB_INIT_USERNAME
                  name: env
          image: ddosify/selfhosted_hammer:1.1.0
          name: hammer
          imagePullPolicy: IfNotPresent
          resources: {}
          volumeMounts:
            - mountPath: /root/uuid
              name: hammer-id
      restartPolicy: Always
      volumes:
        - name: hammer-id
          persistentVolumeClaim:
            claimName: hammer-id
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: ddosify
  labels:
    service: hammer-id
  name: hammer-id
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
